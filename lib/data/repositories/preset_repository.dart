import '../../data/models/preset_model.dart';
import '../../data/models/project_row_model.dart';
import '../../core/services/local_storage_service.dart';

// Handles CRUD operations with local storage
class PresetRepository {
  final LocalStorageService _storageService;

  PresetRepository(this._storageService);

  Future<List<PresetModel>> getAllPresets() async {
    try {
      final presets = await _storageService.getPresets();
      // include default presets
      final allPresets = [..._getDefaultPresets(), ...presets];
      return allPresets;
    } catch (e) {
      return _getDefaultPresets();
    }
  }

  Future<PresetModel?> getPresetById(String id) async {
    final presets = await getAllPresets();
    return presets.where((preset) => preset.id == id).firstOrNull;
  }

  Future<PresetModel> createPreset({
    required String name,
    String? description,
    required List<ProjectRowModel> rows,
  }) async {
    final preset = PresetModel(
      id: DateTime.now().millisecondsSinceEpoch.toString(),
      name: name,
      defaultRows: rows,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    );

    await _storageService.savePreset(preset);

    return preset;
  }

  Future<void> updatePreset(PresetModel preset) async {
    if (!preset.isDefault) {
      await _storageService.savePreset(preset);
    }
  }

  Future<void> deletePreset(String id) async {
    await _storageService.deletePreset(id);
  }

  Future<bool> presetNameExists(String name, {String? excludeId}) async {
    final presets = await getAllPresets();
    return presets.any((preset) =>
        preset.name.toLowerCase() == name.toLowerCase() &&
        preset.id != excludeId &&
        !preset.isDefault);
  }

  List<PresetModel> _getDefaultPresets() {
    return [
      PresetModel(
        id: 'default_solar_5kw',
        name: '5kW Solar System',
        defaultRows: [
          const ProjectRowModel(
            id: '1',
            title: '5kW Inverter',
            quantity: 1,
            unit: 'unit',
            description: '5kW Inverter',
            estimatedPrice: 45000.0,
            isAutoGenerated: true,
            category: 'inverter',
          ),
          const ProjectRowModel(
            id: '2',
            title: 'Installation & Mounting',
            quantity: 1,
            unit: 'lot',
            description: 'Installation & Mounting',
            estimatedPrice: 25000.0,
            isAutoGenerated: true,
            category: 'installation',
          ),
        ],
        createdAt: DateTime.now(),
        updatedAt: DateTime.now(),
        isDefault: true,
      ),
      PresetModel(
        id: 'default_solar_10kw',
        name: '10kW Solar System',
        defaultRows: [
          const ProjectRowModel(
            id: '1',
            title: '10kW Inverter',
            quantity: 1,
            unit: 'unit',
            description: '10kW Inverter',
            estimatedPrice: 75000.0,
            isAutoGenerated: true,
            category: 'inverter',
          ),
          const ProjectRowModel(
            id: '2',
            title: 'Installation & Mounting',
            quantity: 1,
            unit: 'lot',
            description: 'Installation & Mounting',
            estimatedPrice: 40000.0,
            isAutoGenerated: true,
            category: 'installation',
          ),
        ],
        createdAt: DateTime.now(),
        updatedAt: DateTime.now(),
        isDefault: true,
      ),
    ];
  }
}
